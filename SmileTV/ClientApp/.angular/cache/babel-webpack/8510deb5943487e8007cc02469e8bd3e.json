{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/TheWorks/SmileTV/SmileTV/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as signalR from '@microsoft/signalr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction MyQueueComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r1);\n  }\n}\n\nexport class MyQueueComponent {\n  constructor() {\n    this.messages = [\"one\"];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.connection = new signalR.HubConnectionBuilder().withUrl('https://localhost:44448/hub/chat', {\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets\n      }).build();\n\n      _this.connection.on('messageReceived', message => {\n        alert(message); //this.messages.push(message);//\n      });\n\n      yield _this.connection.start().then(() => {\n        console.log(`SignalR connection success! connectionId: ${_this.connection.connectionId} `); //resolve();\n      }); //this.connection.invoke(\"Send\", \"Ben\");\n    })();\n  }\n\n}\n\nMyQueueComponent.ɵfac = function MyQueueComponent_Factory(t) {\n  return new (t || MyQueueComponent)();\n};\n\nMyQueueComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MyQueueComponent,\n  selectors: [[\"queue-component\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function MyQueueComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, MyQueueComponent_div_1_Template, 3, 1, \"div\", 0);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n    }\n  },\n  directives: [i1.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"sources":["D:/Projects/TheWorks/SmileTV/SmileTV/ClientApp/src/app/walkthrough/queue.component.ts"],"names":["signalR","i0","i1","MyQueueComponent_div_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","message_r1","$implicit","ɵɵadvance","ɵɵtextInterpolate","MyQueueComponent","constructor","messages","ngOnInit","connection","HubConnectionBuilder","withUrl","skipNegotiation","transport","HttpTransportType","WebSockets","build","on","message","alert","start","then","console","log","connectionId","ɵfac","MyQueueComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","MyQueueComponent_Template","ɵɵtemplate","ɵɵproperty","directives","NgForOf","encapsulation"],"mappings":";AAAA,OAAO,KAAKA,OAAZ,MAAyB,oBAAzB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;;AACA,SAASC,+BAAT,CAAyCC,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AAC5DH,IAAAA,EAAE,CAACK,cAAH,CAAkB,CAAlB,EAAqB,KAArB;AACAL,IAAAA,EAAE,CAACK,cAAH,CAAkB,CAAlB,EAAqB,OAArB;AACAL,IAAAA,EAAE,CAACM,MAAH,CAAU,CAAV;AACAN,IAAAA,EAAE,CAACO,YAAH;AACAP,IAAAA,EAAE,CAACO,YAAH;AACH;;AAAC,MAAIJ,EAAE,GAAG,CAAT,EAAY;AACV,UAAMK,UAAU,GAAGJ,GAAG,CAACK,SAAvB;AACAT,IAAAA,EAAE,CAACU,SAAH,CAAa,CAAb;AACAV,IAAAA,EAAE,CAACW,iBAAH,CAAqBH,UAArB;AACH;AAAE;;AACH,OAAO,MAAMI,gBAAN,CAAuB;AAC1BC,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,GAAgB,CAAC,KAAD,CAAhB;AACH;;AACKC,EAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,MAAA,KAAI,CAACC,UAAL,GAAkB,IAAIjB,OAAO,CAACkB,oBAAZ,GACbC,OADa,CACL,kCADK,EAC+B;AAC7CC,QAAAA,eAAe,EAAE,IAD4B;AAE7CC,QAAAA,SAAS,EAAErB,OAAO,CAACsB,iBAAR,CAA0BC;AAFQ,OAD/B,EAKbC,KALa,EAAlB;;AAMA,MAAA,KAAI,CAACP,UAAL,CAAgBQ,EAAhB,CAAmB,iBAAnB,EAAuCC,OAAD,IAAa;AAC/CC,QAAAA,KAAK,CAACD,OAAD,CAAL,CAD+C,CAE/C;AACH,OAHD;;AAIA,YAAM,KAAI,CAACT,UAAL,CAAgBW,KAAhB,GAAwBC,IAAxB,CAA6B,MAAM;AACrCC,QAAAA,OAAO,CAACC,GAAR,CAAa,6CAA4C,KAAI,CAACd,UAAL,CAAgBe,YAAa,GAAtF,EADqC,CAErC;AACH,OAHK,CAAN,CAXa,CAeb;AAfa;AAgBhB;;AApByB;;AAsB9BnB,gBAAgB,CAACoB,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAItB,gBAAV,GAAP;AAAuC,CAAtG;;AACAA,gBAAgB,CAACuB,IAAjB,GAAwB,aAAcnC,EAAE,CAACoC,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAEzB,gBAAR;AAA0B0B,EAAAA,SAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAArC;AAA4DC,EAAAA,KAAK,EAAE,CAAnE;AAAsEC,EAAAA,IAAI,EAAE,CAA5E;AAA+EC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,OAAJ,EAAa,SAAb,CAAD,CAAvF;AAAkHC,EAAAA,QAAQ,EAAE,SAASC,yBAAT,CAAmCxC,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACzOH,MAAAA,EAAE,CAACK,cAAH,CAAkB,CAAlB,EAAqB,KAArB;AACAL,MAAAA,EAAE,CAAC4C,UAAH,CAAc,CAAd,EAAiB1C,+BAAjB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,KAAxD,EAA+D,CAA/D;AACAF,MAAAA,EAAE,CAACO,YAAH;AACH;;AAAC,QAAIJ,EAAE,GAAG,CAAT,EAAY;AACVH,MAAAA,EAAE,CAACU,SAAH,CAAa,CAAb;AACAV,MAAAA,EAAE,CAAC6C,UAAH,CAAc,SAAd,EAAyBzC,GAAG,CAACU,QAA7B;AACH;AAAE,GAPoD;AAOlDgC,EAAAA,UAAU,EAAE,CAAC7C,EAAE,CAAC8C,OAAJ,CAPsC;AAOxBC,EAAAA,aAAa,EAAE;AAPS,CAArB,CAAtC","sourcesContent":["import * as signalR from '@microsoft/signalr';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common\";\r\nfunction MyQueueComponent_div_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵelementStart(1, \"label\");\r\n    i0.ɵɵtext(2);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const message_r1 = ctx.$implicit;\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(message_r1);\r\n} }\r\nexport class MyQueueComponent {\r\n    constructor() {\r\n        this.messages = [\"one\"];\r\n    }\r\n    async ngOnInit() {\r\n        this.connection = new signalR.HubConnectionBuilder()\r\n            .withUrl('https://localhost:44448/hub/chat', {\r\n            skipNegotiation: true,\r\n            transport: signalR.HttpTransportType.WebSockets\r\n        })\r\n            .build();\r\n        this.connection.on('messageReceived', (message) => {\r\n            alert(message);\r\n            //this.messages.push(message);//\r\n        });\r\n        await this.connection.start().then(() => {\r\n            console.log(`SignalR connection success! connectionId: ${this.connection.connectionId} `);\r\n            //resolve();\r\n        });\r\n        //this.connection.invoke(\"Send\", \"Ben\");\r\n    }\r\n}\r\nMyQueueComponent.ɵfac = function MyQueueComponent_Factory(t) { return new (t || MyQueueComponent)(); };\r\nMyQueueComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: MyQueueComponent, selectors: [[\"queue-component\"]], decls: 2, vars: 1, consts: [[4, \"ngFor\", \"ngForOf\"]], template: function MyQueueComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\");\r\n        i0.ɵɵtemplate(1, MyQueueComponent_div_1_Template, 3, 1, \"div\", 0);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\r\n    } }, directives: [i1.NgForOf], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}